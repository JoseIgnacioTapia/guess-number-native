{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useFonts } from 'expo-font';\nimport StartGameScreen from \"./screens/StartGameScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOverScreen from \"./screens/GameOverScreen\";\nimport Colors from \"./constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    userNumber = _useState2[0],\n    setUserNumber = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    gameIsOver = _useState4[0],\n    setGameIsOver = _useState4[1];\n  function pickedNumberHandler(pickedNumber) {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  }\n  function gameOverHandler() {\n    setGameIsOver(true);\n  }\n  var screen = _jsx(StartGameScreen, {\n    onPickNumber: pickedNumberHandler\n  });\n  if (userNumber) {\n    screen = _jsx(GameScreen, {\n      userNumber: userNumber,\n      onGameOver: gameOverHandler\n    });\n  }\n  if (gameIsOver && userNumber) {\n    screen = _jsx(GameOverScreen, {});\n  }\n  return _jsx(LinearGradient, {\n    colors: [Colors.primary700, Colors.accent500],\n    style: styles.rootScreen,\n    children: _jsx(ImageBackground, {\n      source: require(\"./assets/images/background.png\"),\n      resizeMode: \"cover\",\n      style: styles.rootScreen,\n      imageStyle: styles.backgroundImage,\n      children: _jsx(SafeAreaView, {\n        style: styles.rootScreen,\n        children: screen\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1\n  },\n  backgroundImage: {\n    opacity: 0.15\n  }\n});","map":{"version":3,"names":["useState","LinearGradient","useFonts","StartGameScreen","GameScreen","GameOverScreen","Colors","jsx","_jsx","App","_useState","_useState2","_slicedToArray","userNumber","setUserNumber","_useState3","_useState4","gameIsOver","setGameIsOver","pickedNumberHandler","pickedNumber","gameOverHandler","screen","onPickNumber","onGameOver","colors","primary700","accent500","style","styles","rootScreen","children","ImageBackground","source","require","resizeMode","imageStyle","backgroundImage","SafeAreaView","StyleSheet","create","flex","opacity"],"sources":["C:/Users/Ignacio Tapia/Desktop/ReactNativeProjects/starting-project/App.js"],"sourcesContent":["import { StyleSheet, ImageBackground, SafeAreaView } from 'react-native';\nimport { useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useFonts } from 'expo-font';\n\nimport StartGameScreen from './screens/StartGameScreen';\nimport GameScreen from './screens/GameScreen';\nimport GameOverScreen from './screens/GameOverScreen';\nimport Colors from './constants/colors';\n\nexport default function App() {\n  const [userNumber, setUserNumber] = useState();\n  const [gameIsOver, setGameIsOver] = useState(true);\n\n  function pickedNumberHandler(pickedNumber) {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  }\n\n  function gameOverHandler() {\n    setGameIsOver(true);\n  }\n\n  let screen = <StartGameScreen onPickNumber={pickedNumberHandler} />;\n\n  if (userNumber) {\n    screen = (\n      <GameScreen userNumber={userNumber} onGameOver={gameOverHandler} />\n    );\n  }\n\n  if (gameIsOver && userNumber) {\n    screen = <GameOverScreen />;\n  }\n\n  return (\n    <LinearGradient\n      colors={[Colors.primary700, Colors.accent500]}\n      style={styles.rootScreen}\n    >\n      <ImageBackground\n        source={require('./assets/images/background.png')}\n        resizeMode=\"cover\"\n        style={styles.rootScreen}\n        imageStyle={styles.backgroundImage}\n      >\n        <SafeAreaView style={styles.rootScreen}>{screen}</SafeAreaView>\n      </ImageBackground>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1,\n  },\n  backgroundImage: {\n    opacity: 0.15,\n  },\n});\n"],"mappings":";;;;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,QAAQ,QAAQ,WAAW;AAEpC,OAAOC,eAAe;AACtB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,OAAOC,MAAM;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAExC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAoCV,QAAQ,EAAE;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAoCf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,SAASG,mBAAmBA,CAACC,YAAY,EAAE;IACzCN,aAAa,CAACM,YAAY,CAAC;IAC3BF,aAAa,CAAC,KAAK,CAAC;EACtB;EAEA,SAASG,eAAeA,CAAA,EAAG;IACzBH,aAAa,CAAC,IAAI,CAAC;EACrB;EAEA,IAAII,MAAM,GAAGd,IAAA,CAACL,eAAe;IAACoB,YAAY,EAAEJ;EAAoB,EAAG;EAEnE,IAAIN,UAAU,EAAE;IACdS,MAAM,GACJd,IAAA,CAACJ,UAAU;MAACS,UAAU,EAAEA,UAAW;MAACW,UAAU,EAAEH;IAAgB,EACjE;EACH;EAEA,IAAIJ,UAAU,IAAIJ,UAAU,EAAE;IAC5BS,MAAM,GAAGd,IAAA,CAACH,cAAc,KAAG;EAC7B;EAEA,OACEG,IAAA,CAACP,cAAc;IACbwB,MAAM,EAAE,CAACnB,MAAM,CAACoB,UAAU,EAAEpB,MAAM,CAACqB,SAAS,CAAE;IAC9CC,KAAK,EAAEC,MAAM,CAACC,UAAW;IAAAC,QAAA,EAEzBvB,IAAA,CAACwB,eAAe;MACdC,MAAM,EAAEC,OAAO,kCAAmC;MAClDC,UAAU,EAAC,OAAO;MAClBP,KAAK,EAAEC,MAAM,CAACC,UAAW;MACzBM,UAAU,EAAEP,MAAM,CAACQ,eAAgB;MAAAN,QAAA,EAEnCvB,IAAA,CAAC8B,YAAY;QAACV,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAET;MAAM;IAAgB;EAC/C,EACH;AAErB;AAEA,IAAMO,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,UAAU,EAAE;IACVW,IAAI,EAAE;EACR,CAAC;EACDJ,eAAe,EAAE;IACfK,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}