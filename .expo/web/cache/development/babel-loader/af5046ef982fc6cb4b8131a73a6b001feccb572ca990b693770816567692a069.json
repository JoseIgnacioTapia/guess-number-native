{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Colors from \"../constants/colors\";\nimport Title from \"../components/ui/Title\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredNumber = _useState2[0],\n    setEnteredNumber = _useState2[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n  function resetInputHandler() {\n    setEnteredNumber('');\n  }\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n    onPickNumber(chosenNumber);\n  }\n  var marginTopDistance = height < 380 ? 30 : 100;\n  return _jsxs(View, {\n    style: [styles.rootContainer, {\n      marginTop: marginTopDistance\n    }],\n    children: [_jsx(Title, {\n      children: \"Guess my number\"\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        children: \"Enter a Number\"\n      }), _jsx(TextInput, {\n        style: styles.numberInput,\n        maxLength: 2,\n        keyboardType: \"number-pad\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: numberInputHandler,\n        value: enteredNumber\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: resetInputHandler,\n            children: \"Reset\"\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: confirmInputHandler,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","TextInput","View","StyleSheet","Alert","useWindowDimensions","KeyboardAvoidingView","PrimaryButton","Colors","Title","Card","InstructionText","jsx","_jsx","jsxs","_jsxs","StartGameScreen","_ref","onPickNumber","_useState","_useState2","_slicedToArray","enteredNumber","setEnteredNumber","_useWindowDimensions","width","height","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","alert","text","style","onPress","marginTopDistance","styles","rootContainer","marginTop","children","numberInput","maxLength","keyboardType","autoCapitalize","autoCorrect","onChangeText","value","buttonsContainer","buttonContainer","create","flex","alignItems","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection"],"sources":["C:/Users/Ignacio Tapia/Desktop/ReactNativeProjects/starting-project/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from 'react';\r\nimport {\r\n  TextInput,\r\n  View,\r\n  StyleSheet,\r\n  Alert,\r\n  useWindowDimensions,\r\n  KeyboardAvoidingView,\r\n} from 'react-native';\r\n\r\nimport PrimaryButton from '../components/ui/PrimaryButton';\r\nimport Colors from '../constants/colors';\r\nimport Title from '../components/ui/Title';\r\nimport Card from '../components/ui/Card';\r\nimport InstructionText from '../components/ui/InstructionText';\r\n\r\nfunction StartGameScreen({ onPickNumber }) {\r\n  const [enteredNumber, setEnteredNumber] = useState('');\r\n\r\n  const { width, height } = useWindowDimensions();\r\n\r\n  function numberInputHandler(enteredText) {\r\n    setEnteredNumber(enteredText);\r\n  }\r\n\r\n  function resetInputHandler() {\r\n    setEnteredNumber('');\r\n  }\r\n\r\n  function confirmInputHandler() {\r\n    const chosenNumber = parseInt(enteredNumber);\r\n\r\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\r\n      Alert.alert(\r\n        'Invalid number',\r\n        'Number has to be a number between 1 and 99.',\r\n        [{ text: 'Okay', style: 'destructive', onPress: resetInputHandler }]\r\n      );\r\n      return;\r\n    }\r\n\r\n    onPickNumber(chosenNumber);\r\n  }\r\n\r\n  const marginTopDistance = height < 380 ? 30 : 100;\r\n\r\n  return (\r\n    <View style={[styles.rootContainer, { marginTop: marginTopDistance }]}>\r\n      <Title>Guess my number</Title>\r\n      <Card>\r\n        <InstructionText>Enter a Number</InstructionText>\r\n        <TextInput\r\n          style={styles.numberInput}\r\n          maxLength={2}\r\n          keyboardType=\"number-pad\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          onChangeText={numberInputHandler}\r\n          value={enteredNumber}\r\n        />\r\n        <View style={styles.buttonsContainer}>\r\n          <View style={styles.buttonContainer}>\r\n            <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\r\n          </View>\r\n          <View style={styles.buttonContainer}>\r\n            <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\r\n          </View>\r\n        </View>\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default StartGameScreen;\r\n\r\n// const deviceHeight = Dimensions.get('window').height;\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    flex: 1,\r\n    // marginTop: deviceHeight < 380 ? 30 : 100,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  numberInput: {\r\n    height: 50,\r\n    width: 50,\r\n    fontSize: 32,\r\n    borderBottomColor: Colors.accent500,\r\n    borderBottomWidth: 2,\r\n    color: Colors.accent500,\r\n    marginVertical: 8,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}