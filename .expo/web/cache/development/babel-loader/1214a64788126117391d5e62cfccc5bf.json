{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useEffect, useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport StartGameScreen from \"./screens/StartGameScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOverScreen from \"./screens/GameOverScreen\";\nimport Colors from \"./constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    userNumber = _useState2[0],\n    setUserNumber = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    gameIsOver = _useState4[0],\n    setGameIsOver = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    guessRounds = _useState6[0],\n    setGuessRounds = _useState6[1];\n  var _useFonts = useFonts({\n      'open-sans': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n      'open-sans-bold': require(\"./assets/fonts/OpenSans-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  useEffect(function () {\n    function showSplashScreen() {\n      return _showSplashScreen.apply(this, arguments);\n    }\n    function _showSplashScreen() {\n      _showSplashScreen = _asyncToGenerator(function* () {\n        yield SplashScreen.preventAutoHideAsync();\n        if (fontsLoaded) {\n          SplashScreen.hideAsync();\n        }\n      });\n      return _showSplashScreen.apply(this, arguments);\n    }\n    showSplashScreen();\n  }, [fontsLoaded]);\n  if (!fontsLoaded) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Welcome!!!\"\n      })\n    });\n  }\n  function pickedNumberHandler(pickedNumber) {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  }\n  function gameOverHandler(numberOfRounds) {\n    setGameIsOver(true);\n    setGuessRounds(numberOfRounds);\n  }\n  function startNewGameHandler() {\n    setUserNumber(null);\n    setGuessRounds(0);\n  }\n  var screen = _jsx(StartGameScreen, {\n    onPickNumber: pickedNumberHandler\n  });\n  if (userNumber) {\n    screen = _jsx(GameScreen, {\n      userNumber: userNumber,\n      onGameOver: gameOverHandler\n    });\n  }\n  if (gameIsOver && userNumber) {\n    screen = _jsx(GameOverScreen, {\n      userNumber: userNumber,\n      roundsNumber: guessRounds,\n      onStartNewGame: startNewGameHandler\n    });\n  }\n  return _jsx(LinearGradient, {\n    colors: [Colors.primary700, Colors.accent500],\n    style: styles.rootScreen,\n    children: _jsx(ImageBackground, {\n      source: require(\"./assets/images/background.png\"),\n      resizeMode: \"cover\",\n      style: styles.rootScreen,\n      imageStyle: styles.backgroundImage,\n      children: _jsx(SafeAreaView, {\n        style: styles.rootScreen,\n        children: screen\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1\n  },\n  backgroundImage: {\n    opacity: 0.15\n  }\n});","map":{"version":3,"names":["useEffect","useState","LinearGradient","useFonts","SplashScreen","StartGameScreen","GameScreen","GameOverScreen","Colors","jsx","_jsx","App","_useState","_useState2","_slicedToArray","userNumber","setUserNumber","_useState3","_useState4","gameIsOver","setGameIsOver","_useState5","_useState6","guessRounds","setGuessRounds","_useFonts","require","_useFonts2","fontsLoaded","showSplashScreen","_showSplashScreen","apply","arguments","_asyncToGenerator","preventAutoHideAsync","hideAsync","View","children","Text","pickedNumberHandler","pickedNumber","gameOverHandler","numberOfRounds","startNewGameHandler","screen","onPickNumber","onGameOver","roundsNumber","onStartNewGame","colors","primary700","accent500","style","styles","rootScreen","ImageBackground","source","resizeMode","imageStyle","backgroundImage","SafeAreaView","StyleSheet","create","flex","opacity"],"sources":["C:/Users/Ignacio Tapia/Desktop/ReactNativeProjects/starting-project/App.js"],"sourcesContent":["import {\n  StyleSheet,\n  ImageBackground,\n  SafeAreaView,\n  Text,\n  View,\n} from 'react-native';\nimport { useEffect, useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useFonts } from 'expo-font';\n// import AppLoading from 'expo-app-loading';\nimport * as SplashScreen from 'expo-splash-screen';\n\nimport StartGameScreen from './screens/StartGameScreen';\nimport GameScreen from './screens/GameScreen';\nimport GameOverScreen from './screens/GameOverScreen';\nimport Colors from './constants/colors';\n\nexport default function App() {\n  const [userNumber, setUserNumber] = useState();\n  const [gameIsOver, setGameIsOver] = useState(true);\n  const [guessRounds, setGuessRounds] = useState(0);\n\n  const [fontsLoaded] = useFonts({\n    'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n  });\n\n  useEffect(() => {\n    async function showSplashScreen() {\n      await SplashScreen.preventAutoHideAsync();\n      if (fontsLoaded) {\n        SplashScreen.hideAsync();\n      }\n    }\n    showSplashScreen();\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <Text>Welcome!!!</Text>\n      </View>\n    );\n  }\n\n  function pickedNumberHandler(pickedNumber) {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  }\n\n  function gameOverHandler(numberOfRounds) {\n    setGameIsOver(true);\n    setGuessRounds(numberOfRounds);\n  }\n\n  function startNewGameHandler() {\n    setUserNumber(null);\n    setGuessRounds(0);\n  }\n\n  let screen = <StartGameScreen onPickNumber={pickedNumberHandler} />;\n\n  if (userNumber) {\n    screen = (\n      <GameScreen userNumber={userNumber} onGameOver={gameOverHandler} />\n    );\n  }\n\n  if (gameIsOver && userNumber) {\n    screen = (\n      <GameOverScreen\n        userNumber={userNumber}\n        roundsNumber={guessRounds}\n        onStartNewGame={startNewGameHandler}\n      />\n    );\n  }\n\n  return (\n    <LinearGradient\n      colors={[Colors.primary700, Colors.accent500]}\n      style={styles.rootScreen}\n    >\n      <ImageBackground\n        source={require('./assets/images/background.png')}\n        resizeMode=\"cover\"\n        style={styles.rootScreen}\n        imageStyle={styles.backgroundImage}\n      >\n        <SafeAreaView style={styles.rootScreen}>{screen}</SafeAreaView>\n      </ImageBackground>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1,\n  },\n  backgroundImage: {\n    opacity: 0.15,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}