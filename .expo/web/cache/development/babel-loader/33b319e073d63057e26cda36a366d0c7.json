{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Colors from \"../constants/colors\";\nimport Title from \"../components/ui/Title\";\nimport Card from \"../components/ui/Card\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredNumber = _useState2[0],\n    setEnteredNumber = _useState2[1];\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n  function resetInputHandler() {\n    setEnteredNumber('');\n  }\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n    onPickNumber(chosenNumber);\n  }\n  return _jsxs(View, {\n    style: styles.rootContainer,\n    children: [_jsx(Title, {\n      children: \"Guess my number\"\n    }), _jsxs(Card, {\n      children: [_jsx(TextInput, {\n        style: styles.numberInput,\n        maxLength: 2,\n        keyboardType: \"number-pad\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: numberInputHandler,\n        value: enteredNumber\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: resetInputHandler,\n            children: \"Reset\"\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: confirmInputHandler,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    marginTop: 100,\n    alignItems: 'center'\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","TextInput","View","StyleSheet","Alert","Text","PrimaryButton","Colors","Title","Card","jsx","_jsx","jsxs","_jsxs","StartGameScreen","_ref","onPickNumber","_useState","_useState2","_slicedToArray","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","alert","text","style","onPress","styles","rootContainer","children","numberInput","maxLength","keyboardType","autoCapitalize","autoCorrect","onChangeText","value","buttonsContainer","buttonContainer","create","flex","marginTop","alignItems","height","width","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection"],"sources":["C:/Users/Ignacio Tapia/Desktop/ReactNativeProjects/starting-project/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { TextInput, View, StyleSheet, Alert, Text } from 'react-native';\r\n\r\nimport PrimaryButton from '../components/ui/PrimaryButton';\r\nimport Colors from '../constants/colors';\r\nimport Title from '../components/ui/Title';\r\nimport Card from '../components/ui/Card';\r\n\r\nfunction StartGameScreen({ onPickNumber }) {\r\n  const [enteredNumber, setEnteredNumber] = useState('');\r\n\r\n  function numberInputHandler(enteredText) {\r\n    setEnteredNumber(enteredText);\r\n  }\r\n\r\n  function resetInputHandler() {\r\n    setEnteredNumber('');\r\n  }\r\n\r\n  function confirmInputHandler() {\r\n    const chosenNumber = parseInt(enteredNumber);\r\n\r\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\r\n      Alert.alert(\r\n        'Invalid number',\r\n        'Number has to be a number between 1 and 99.',\r\n        [{ text: 'Okay', style: 'destructive', onPress: resetInputHandler }]\r\n      );\r\n      return;\r\n    }\r\n\r\n    onPickNumber(chosenNumber);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.rootContainer}>\r\n      <Title>Guess my number</Title>\r\n      <Card>\r\n        <TextInput\r\n          style={styles.numberInput}\r\n          maxLength={2}\r\n          keyboardType=\"number-pad\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          onChangeText={numberInputHandler}\r\n          value={enteredNumber}\r\n        />\r\n        <View style={styles.buttonsContainer}>\r\n          <View style={styles.buttonContainer}>\r\n            <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\r\n          </View>\r\n          <View style={styles.buttonContainer}>\r\n            <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\r\n          </View>\r\n        </View>\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default StartGameScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    flex: 1,\r\n    marginTop: 100,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  numberInput: {\r\n    height: 50,\r\n    width: 50,\r\n    fontSize: 32,\r\n    borderBottomColor: Colors.accent500,\r\n    borderBottomWidth: 2,\r\n    color: Colors.accent500,\r\n    marginVertical: 8,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}