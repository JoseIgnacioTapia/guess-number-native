{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Title from \"../components/ui/Title\";\nimport { useState } from 'react';\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\nvar minBoundary = 1;\nvar maxBoundary = 100;\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n  var _useState = useState(initialGuess),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentGuess = _useState2[0],\n    setCurrentGuess = _useState2[1];\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Higher or lower?\"\n      }), _jsxs(View, {\n        children: [_jsx(PrimaryButton, {\n          children: \"+\"\n        }), _jsx(PrimaryButton, {\n          children: \"-\"\n        })]\n      })]\n    })]\n  });\n}\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  }\n});","map":{"version":3,"names":["Title","useState","NumberContainer","PrimaryButton","jsx","_jsx","jsxs","_jsxs","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","_ref","userNumber","initialGuess","_useState","_useState2","_slicedToArray","currentGuess","setCurrentGuess","View","style","styles","screen","children","Text","StyleSheet","create","flex","padding"],"sources":["C:/Users/Ignacio Tapia/Desktop/ReactNativeProjects/starting-project/screens/GameScreen.js"],"sourcesContent":["import { View, Text, StyleSheet } from 'react-native';\r\nimport Title from '../components/ui/Title';\r\nimport { useState } from 'react';\r\nimport NumberContainer from '../components/game/NumberContainer';\r\nimport PrimaryButton from '../components/ui/PrimaryButton';\r\n\r\nfunction generateRandomBetween(min, max, exclude) {\r\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  if (rndNum === exclude) {\r\n    return generateRandomBetween(min, max, exclude);\r\n  } else {\r\n    return rndNum;\r\n  }\r\n}\r\n\r\nlet minBoundary = 1;\r\nlet maxBoundary = 100;\r\n\r\nfunction GameScreen({ userNumber }) {\r\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\r\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Title>Opponent's Guess</Title>\r\n      <NumberContainer>{currentGuess}</NumberContainer>\r\n      <View>\r\n        <Text>Higher or lower?</Text>\r\n        <View>\r\n          <PrimaryButton>+</PrimaryButton>\r\n          <PrimaryButton>-</PrimaryButton>\r\n        </View>\r\n      </View>\r\n      {/* <View>LOG ROUNDS</View> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GameScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 24,\r\n  },\r\n});\r\n"],"mappings":";;;;AACA,OAAOA,KAAK;AACZ,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,eAAe;AACtB,OAAOC,aAAa;AAAuC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3D,SAASC,qBAAqBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAChD,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,GAAG,GAAGD,GAAG,CAAC,CAAC,GAAGA,GAAG;EAE5D,IAAIG,MAAM,KAAKD,OAAO,EAAE;IACtB,OAAOH,qBAAqB,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,CAAC;EACjD,CAAC,MAAM;IACL,OAAOC,MAAM;EACf;AACF;AAEA,IAAII,WAAW,GAAG,CAAC;AACnB,IAAIC,WAAW,GAAG,GAAG;AAErB,SAASC,UAAUA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAMC,YAAY,GAAGb,qBAAqB,CAAC,CAAC,EAAE,GAAG,EAAEY,UAAU,CAAC;EAC9D,IAAAE,SAAA,GAAwCrB,QAAQ,CAACoB,YAAY,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpC,OACEhB,KAAA,CAACoB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,GACzB1B,IAAA,CAACL,KAAK;MAAA+B,QAAA,EAAC;IAAgB,EAAQ,EAC/B1B,IAAA,CAACH,eAAe;MAAA6B,QAAA,EAAEN;IAAY,EAAmB,EACjDlB,KAAA,CAACoB,IAAI;MAAAI,QAAA,GACH1B,IAAA,CAAC2B,IAAI;QAAAD,QAAA,EAAC;MAAgB,EAAO,EAC7BxB,KAAA,CAACoB,IAAI;QAAAI,QAAA,GACH1B,IAAA,CAACF,aAAa;UAAA4B,QAAA,EAAC;QAAC,EAAgB,EAChC1B,IAAA,CAACF,aAAa;UAAA4B,QAAA,EAAC;QAAC,EAAgB;MAAA,EAC3B;IAAA,EACF;EAAA,EAEF;AAEX;AAEA,eAAeb,UAAU;AAEzB,IAAMW,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BJ,MAAM,EAAE;IACNK,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}