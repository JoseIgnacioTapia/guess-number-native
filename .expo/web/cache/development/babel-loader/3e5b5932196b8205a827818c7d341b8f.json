{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Title from \"../components/Title\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\nfunction GameScreen() {\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentGuess = _useState2[0],\n    setCurrentGuess = _useState2[1];\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Higher or lower?\"\n      })\n    })]\n  });\n}\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  }\n});","map":{"version":3,"names":["Title","useState","jsx","_jsx","jsxs","_jsxs","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","GameScreen","initialGuess","userNumber","_useState","_useState2","_slicedToArray","currentGuess","setCurrentGuess","View","style","styles","screen","children","Text","StyleSheet","create","flex","padding"],"sources":["C:/Users/Ignacio Tapia/Desktop/ReactNativeProjects/starting-project/screens/GameScreen.js"],"sourcesContent":["import { View, Text, StyleSheet } from 'react-native';\r\nimport Title from '../components/Title';\r\nimport { useState } from 'react';\r\n\r\nfunction generateRandomBetween(min, max, exclude) {\r\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  if (rndNum === exclude) {\r\n    return generateRandomBetween(min, max, exclude);\r\n  } else {\r\n    return rndNum;\r\n  }\r\n}\r\n\r\nfunction GameScreen() {\r\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\r\n  const [currentGuess, setCurrentGuess] = useState();\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Title>Opponent's Guess</Title>\r\n      {/* GUESS */}\r\n      <View>\r\n        <Text>Higher or lower?</Text>\r\n        {/* + - */}\r\n      </View>\r\n      {/* <View>LOG ROUNDS</View> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GameScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 24,\r\n  },\r\n});\r\n"],"mappings":";;;;AACA,OAAOA,KAAK;AACZ,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjC,SAASC,qBAAqBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAChD,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,GAAG,GAAGD,GAAG,CAAC,CAAC,GAAGA,GAAG;EAE5D,IAAIG,MAAM,KAAKD,OAAO,EAAE;IACtB,OAAOH,qBAAqB,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,CAAC;EACjD,CAAC,MAAM;IACL,OAAOC,MAAM;EACf;AACF;AAEA,SAASI,UAAUA,CAAA,EAAG;EACpB,IAAMC,YAAY,GAAGT,qBAAqB,CAAC,CAAC,EAAE,GAAG,EAAEU,UAAU,CAAC;EAC9D,IAAAC,SAAA,GAAwChB,QAAQ,EAAE;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,OACEb,KAAA,CAACiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,GACzBvB,IAAA,CAACH,KAAK;MAAA0B,QAAA,EAAC;IAAgB,EAAQ,EAE/BvB,IAAA,CAACmB,IAAI;MAAAI,QAAA,EACHvB,IAAA,CAACwB,IAAI;QAAAD,QAAA,EAAC;MAAgB;IAAO,EAExB;EAAA,EAEF;AAEX;AAEA,eAAeZ,UAAU;AAEzB,IAAMU,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BJ,MAAM,EAAE;IACNK,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}